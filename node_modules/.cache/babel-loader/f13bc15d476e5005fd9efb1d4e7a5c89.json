{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\React\\\\practice\\\\src\\\\App.js\";\nimport './App.css';\nimport { useState, useEffect } from 'react';\n\nfunction App() {\n  var _s = $RefreshSig$();\n\n  const StateSelector = () => {\n    _s();\n\n    const initialValue = [{\n      id: 0,\n      value: \" --- Select a State ---\"\n    }];\n    const allowedState = [{\n      id: 1,\n      value: \"Alabama\"\n    }, {\n      id: 2,\n      value: \"Georgia\"\n    }, {\n      id: 3,\n      value: \"Tennessee\"\n    }];\n    const [stateOptions, setStateValues] = useState(initialValue); // initialValue.push(...allowedState);\n\n    console.log(initialValue.length); // ****** BEGINNING OF CHANGE ******\n\n    useEffect(() => {\n      // Should not ever set state during rendering, so do this in useEffect instead.\n      setStateValues(allowedState);\n    }, []); // ****** END OF CHANGE ******\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select a State:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        children: stateOptions.map((localState, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: localState.value\n        }, localState.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  };\n\n  _s(StateSelector, \"hN6IUbcKDVbF4nk/fWodxHN0ivQ=\");\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["F:/React/practice/src/App.js"],"names":["useState","useEffect","App","StateSelector","initialValue","id","value","allowedState","stateOptions","setStateValues","console","log","length","map","localState","index"],"mappings":";;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,UAAMC,YAAY,GAAG,CACnB;AAAEC,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,KAAK,EAAE;AAAhB,KADmB,CAArB;AAGA,UAAMC,YAAY,GAAG,CACnB;AAAEF,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,KAAK,EAAE;AAAhB,KADmB,EAEnB;AAAED,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,KAAK,EAAE;AAAhB,KAFmB,EAGnB;AAAED,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,KAAK,EAAE;AAAhB,KAHmB,CAArB;AAMA,UAAM,CAACE,YAAD,EAAeC,cAAf,IAAiCT,QAAQ,CAACI,YAAD,CAA/C,CAV0B,CAW1B;;AAEAM,IAAAA,OAAO,CAACC,GAAR,CAAYP,YAAY,CAACQ,MAAzB,EAb0B,CAc1B;;AACAX,IAAAA,SAAS,CAAC,MAAM;AACd;AACAQ,MAAAA,cAAc,CAACF,YAAD,CAAd;AACD,KAHQ,EAGN,EAHM,CAAT,CAf0B,CAmB1B;;AAEA,wBAAQ;AAAA,8BACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADM,eAEN;AAAA,kBACGC,YAAY,CAACK,GAAb,CAAiB,CAACC,UAAD,EAAaC,KAAb,kBAChB;AAAA,oBAA6BD,UAAU,CAACR;AAAxC,WAAaQ,UAAU,CAACT,EAAxB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAFM;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAQH,GA7BC;;AAFa,KAEPF,aAFO;AAgCd;;KAhCQD,G;AAkCT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { useState, useEffect } from 'react';\n\nfunction App() {\n \n  const StateSelector = () => {\n    const initialValue = [\n      { id: 0, value: \" --- Select a State ---\" }];\n  \n    const allowedState = [\n      { id: 1, value: \"Alabama\" },\n      { id: 2, value: \"Georgia\" },\n      { id: 3, value: \"Tennessee\" }\n    ];\n  \n    const [stateOptions, setStateValues] = useState(initialValue);\n    // initialValue.push(...allowedState);\n  \n    console.log(initialValue.length);\n    // ****** BEGINNING OF CHANGE ******\n    useEffect(() => {\n      // Should not ever set state during rendering, so do this in useEffect instead.\n      setStateValues(allowedState);\n    }, []);\n    // ****** END OF CHANGE ******\n  \n    return (<div>\n      <label>Select a State:</label>\n      <select>\n        {stateOptions.map((localState, index) => (\n          <option key={localState.id}>{localState.value}</option>\n        ))}\n      </select>\n    </div>);\n};\n}  \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}