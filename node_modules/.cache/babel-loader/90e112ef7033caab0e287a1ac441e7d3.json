{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\React\\\\practice\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from 'react';\n\nfunction App() {\n  _s();\n\n  const initialValue = [{\n    id: 0,\n    value: \" --- Select a State ---\"\n  }];\n  const allowedState = [{\n    id: 1,\n    value: \"Alabama\"\n  }, {\n    id: 2,\n    value: \"Georgia\"\n  }, {\n    id: 3,\n    value: \"Tennessee\"\n  }];\n  const [stateOptions, setStateValues] = useState(initialValue); // initialValue.push(...allowedState);\n\n  console.log(allowedState); // ****** BEGINNING OF CHANGE ******\n\n  useEffect(() => {\n    // Should not ever set state during rendering, so do this in useEffect instead.\n    setStateValues(allowedState);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Select a State:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      children: stateOptions.map((localState, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        children: localState.value\n      }, localState.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"hN6IUbcKDVbF4nk/fWodxHN0ivQ=\");\n\n_c = App;\n;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["F:/React/practice/src/App.js"],"names":["useState","useEffect","App","initialValue","id","value","allowedState","stateOptions","setStateValues","console","log","map","localState","index"],"mappings":";;;;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEX,QAAMC,YAAY,GAAG,CACnB;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE;AAAhB,GADmB,CAArB;AAGA,QAAMC,YAAY,GAAG,CACnB;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE;AAAhB,GADmB,EAEnB;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE;AAAhB,GAFmB,EAGnB;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE;AAAhB,GAHmB,CAArB;AAMA,QAAM,CAACE,YAAD,EAAeC,cAAf,IAAiCR,QAAQ,CAACG,YAAD,CAA/C,CAXW,CAYX;;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAZ,EAdW,CAeX;;AACAL,EAAAA,SAAS,CAAC,MAAM;AACd;AACAO,IAAAA,cAAc,CAACF,YAAD,CAAd;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGC,YAAY,CAACI,GAAb,CAAiB,CAACC,UAAD,EAAaC,KAAb,kBAChB;AAAA,kBAA6BD,UAAU,CAACP;AAAxC,SAAaO,UAAU,CAACR,EAAxB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASF;;GA9BOF,G;;KAAAA,G;AA8BP;AAEF,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { useState, useEffect } from 'react';\n\nfunction App() {\n \n    const initialValue = [\n      { id: 0, value: \" --- Select a State ---\" }];\n  \n    const allowedState = [\n      { id: 1, value: \"Alabama\" },\n      { id: 2, value: \"Georgia\" },\n      { id: 3, value: \"Tennessee\" }\n    ];\n  \n    const [stateOptions, setStateValues] = useState(initialValue);\n    // initialValue.push(...allowedState);\n  \n    console.log(allowedState);\n    // ****** BEGINNING OF CHANGE ******\n    useEffect(() => {\n      // Should not ever set state during rendering, so do this in useEffect instead.\n      setStateValues(allowedState);\n    }, []);\n  \n    return (\n      <div>\n        <label>Select a State:</label>\n        <select>\n          {stateOptions.map((localState, index) => (\n            <option key={localState.id}>{localState.value}</option>\n          ))}\n        </select>\n    </div>);\n };\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}